{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","username","email","pass","accept","message","errors","messages","username_incorrect","email_incorrect","pass_incorrect","accept_incorrect","handleChange","e","name","target","type","value","setState","checked","handleSubmit","preventDefault","validation","formValidation","correct","password","length","indexOf","this","setTimeout","className","onSubmit","noValidate","htmlFor","id","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f84b4a1.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  state = {\n    username: \"\",\n    email: \"\",\n    pass: \"\",\n    accept: false,\n    message: \"\",\n    errors: {\n      username: false,\n      email: false,\n      pass: false,\n      accept: false,\n    }\n  }\n\n  messages = {\n    username_incorrect: \"Nazwa musi być dłuższa niż 3 znaki i nie może zawierać spacji\",\n    email_incorrect: \"Niepoprawny adres email, dodaj @\",\n    pass_incorrect: \"Hasło musi mieć 8 znaków\",\n    accept_incorrect: \"Niepotwierdzona zgoda\",\n  }\n\n  handleChange = e => {\n\n    const name = e.target.name;\n    const type = e.target.type;\n\n    if (type === \"text\" || type === \"password\" || type === \"email\") {\n      const value = e.target.value;\n      this.setState({\n        [name]: value,\n      })\n    } else if (type === \"checkbox\") {\n      const checked = e.target.checked;\n      this.setState({\n        [name]: checked,\n      }) \n    }\n    \n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const validation = this.formValidation();\n\n    if (validation.correct) {\n      this.setState({\n        username: \"\",\n        email: \"\",\n        pass: \"\",\n        accept: false,\n        message: \"Fromularz został wysłany\",\n        errors: {\n          username: false,\n          email: false,\n          pass: false,\n          accept: false,\n        }\n      })\n    } else {\n      this.setState({\n        errors: {\n          username: !validation.username,\n          email: !validation.email,\n          pass: !validation.password,\n          accept: !validation.accept,\n        }\n      })\n    }\n  }\n \n  formValidation = () => {\n    let username = false;\n    let email = false;\n    let password = false;\n    let accept = false;\n    let correct = false;\n\n    if (this.state.username.length > 3 && this.state.username.indexOf(' ') === -1) {\n      username = true;\n    }\n\n    if (this.state.email.indexOf('@') !== -1) {\n      email = true\n    }\n\n    if (this.state.pass.length === 8) {\n      password = true;\n    }\n\n    if (this.state.accept) {\n      accept = true;\n    }\n\n    if (username && email && password && accept) {\n      correct = true;\n    }\n\n    return({\n      correct,\n      username,\n      email,\n      password,\n      accept\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: '',\n      }), 3000);\n    }\n  }\n  \n  render() { \n    return ( \n      <>\n        <form className=\"App\" onSubmit={this.handleSubmit} noValidate>\n          <label htmlFor=\"user\">Twoje imię:  \n            <input type=\"text\" id=\"user\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n            {this.state.errors.username && <span>{this.messages.username_incorrect}</span>}\n          </label>\n          <label htmlFor=\"email\">Twój adres email:  \n            <input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\n            {this.state.errors.email && <span>{this.messages.email_incorrect}</span>}\n          </label>\n          <label htmlFor=\"password\">Twoje hasło:  \n            <input type=\"password\" id=\"password\" name=\"pass\" value={this.state.pass} onChange={this.handleChange}/>\n            {this.state.errors.pass && <span>{this.messages.pass_incorrect}</span>}\n          </label>\n          <label htmlFor=\"accept\">\n            <input type=\"checkbox\" id=\"accept\" name=\"accept\" checked={this.state.accept} onChange={this.handleChange}/> Wyrażam zgodę na wszystko\n          </label>\n          {this.state.errors.accept && <span>{this.messages.accept_incorrect}</span>}\n          <button>Zapisz się</button>\n        </form>\n        {this.state.message && <h3>{this.state.message}</h3>}\n    </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}